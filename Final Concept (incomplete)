#Author: Nataliya Faisal
#Date: 13/08/2024
#Purpose: 

#Import tkinter so we can make a GUI
from tkinter import *
#For the random receipt generator
import random 
#For the combobox
from tkinter import ttk 


bg_colour1= "RosyBrown1"
bg_colour2 = "pale violet red"

#Quit subroutine
def quit():
    main_window.destroy()

#Print details of all the receipt
def print_receipt_details ():
    name_count = 0

    #Create the column headings
    Label(main_window, font=("Cambria 11"),text="Row",background=bg_colour2).grid(column=0,row=7)
    Label(main_window, font=("Cambria 11"),text="Customer full name",background=bg_colour2).grid(column=1,row=7)
    Label(main_window, font=("Cambria 11"),text="The item hired",background=bg_colour2).grid(column=2,row=7)
    Label(main_window, font=("Cambria 11"),text="Amount hired",background=bg_colour2).grid(column=3,row=7)
    Label(main_window, font=("Cambria 11"),text="Receipt Number",background=bg_colour2).grid(column=4,row=7)

    #Add each item in the list into its own row
    while name_count < counters['total_entries'] :
        Label(main_window, text=name_count,background=bg_colour2).grid(column=0,row=name_count+8)
        Label(main_window, text=(receipt_details[name_count][0]),background=bg_colour2).grid(column=1,row=name_count+8)
        Label(main_window, text=(receipt_details[name_count][1]),background=bg_colour2).grid(column=2,row=name_count+8)
        Label(main_window, text=(receipt_details[name_count][2]),background=bg_colour2).grid(column=3,row=name_count+8)
        Label(main_window, text=(receipt_details[name_count][3]),background=bg_colour2).grid(column=4,row=name_count+8)
        Label(main_window, text=(receipt_details[name_count][4]),background=bg_colour2).grid(column=5,row=name_count+8)
        name_count +=  1
        counters['name_count'] = name_count
       
#Check the inputs are all valid
def check_inputs ():
    input_check = 0
    Label(main_window, text="               ",background=bg_colour2) .grid(column=2,row=0)
    Label(main_window, text="               ",background=bg_colour2) .grid(column=2,row=1)
    Label(main_window, text="               ",background=bg_colour2) .grid(column=2,row=2)
    Label(main_window, text="               ",background=bg_colour2) .grid(column=2,row=3)

    #Check that the customers full name is not, set error text if blank  
    if len(entry_Customer_full_name.get()) == 0 :
        Label(main_window,fg="red",font=("Cambria 11"), text="Required",background=bg_colour2) .grid(column=2,row=0)
        input_check = 1

    #Check that the item that has been hired is not blank, set error text if blank     
    if len(entry_The_item_hired.get()) == 0 :
        Label(main_window,fg="red", font=("Cambria 11"), text="Required",background=bg_colour2) .grid(column=2,row=1)
        input_check = 1

    #Check that the number of items the customer gets is not blank, set error text if blank
    if len(entry_Amount_hired.get()) == 0 :
        Label(main_window,fg="red", font=("Cambria 11"), text="Required",background=bg_colour2) .grid(column=2,row=3)
        input_check = 1
    if input_check == 0 : append_name()


def append_name ():
    Receipt_number=random.randint(1000,9999)
    #append each item to its own area of the list
    receipt_details.append([entry_Customer_full_name.get(),entry_The_item_hired.get(),entry_Amount_hired.get(),Receipt_number])

    #clear the boxes
    entry_Customer_full_name.delete(0,'end')
    entry_The_item_hired.delete(0,'end')
    entry_Amount_hired.delete(0,'end')
    counters['total_entries'] += 1

#creating the entry as a list of values
    entry=([entry_Customer_full_name.get(),entry_The_item_hired.get(),entry_Amount_hired.get(),Receipt_number])
        #append the entry to the storedetails 
    store_details.append(entry)

#delete a row from the list
def delete_row ():
    try:
        row_to_delete=int(delete_row.get())
        if row_to_delete<0 or row_to_delete>= len(store_details):
            messagebox.showwarning("Warning", "Invalid Row Number!")
            delete_row.delete(0,'end')
            return
        del receipt_details[row_to_delete]
        counters['total_entries'] -=1
        for widget in main_window.grid_slaves():
            if widget.grid_info()["row"]>7:
                 widget.grid_forget()
        print_receipt_details()
        delete_item.delete(0,'end')
    except ValueError:
        messagebox.showwarning("Warning", "Invalid Row Number! (No alphabetical letters or special characters)")

    #print all the items in the list
    print_receipt_details()

#create the buttons and labels
def setup_buttons():
    #create all the empty and default labels, buttons and entry boxes. Put them in the correct grid location
    Label(main_window, font=("Cambria 11"), text="Customer full name",background=bg_colour2) .grid(column=0,row=0,sticky=E)
    Label(main_window, font=("Cambria 11"), text="The item hired", background=bg_colour2) .grid(column=0,row=1,sticky=E)

    Button(main_window, font=("Cambria 11"), text="Quit",background=bg_colour1,command=quit,width = 10) .grid(column=4, row=0,sticky=E)
    Button(main_window, font=("Cambria 11"), text="Enter",background=bg_colour1,command=check_inputs) .grid(column=3,row=1)

    #importing only those functions
    #which are needed
    Button(main_window, font=("Cambria 11"), text="Print details",background=bg_colour1,command=print_receipt_details,width = 10) .grid(column=4,row=1,sticky=E)
    Label(main_window, font=("Cambria 11"), text="Amount hired", background=bg_colour2) .grid(column=0,row=3,sticky=E)
    Label(main_window, font=("Cambria 11"), text="Row #", background=bg_colour2) .grid(column=3,row=2,sticky=E)
    Button(main_window, font=("Cambria 11"), text="Delete Row", background=bg_colour1,command=delete_row,width = 10) .grid(column=4,row=3,sticky=E)
    Label(main_window, text="               ", background=bg_colour2) .grid(column=2,row=0)

#start the program running
def main():

#Start the GUI it up
    setup_buttons()
    main_window.mainloop()

#create empty list for camp details and empty variable for entries in the list
counters = {'total_entries':0,'name_count':0}

receipt_details = []    
main_window =Tk()

main_window.title("Julie's Party Hire")

# Add background color
main_window.configure(background=bg_colour2)

items_hired=['Plates','Spoons','Napkins','Forks','Knifes','Cups']

entry_Customer_full_name = Entry(main_window)
entry_Customer_full_name.grid(column=1,row=0)

entry_The_item_hired = ttk.Combobox(main_window, values= items_hired)
entry_The_item_hired.grid(column=1,row=1)

entry_Amount_hired = Entry(main_window)
entry_Amount_hired.grid(column=1,row=3)

delete_Row = Entry(main_window)
delete_Row.grid(column=3,row=3)

main()
